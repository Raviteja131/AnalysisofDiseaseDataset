# -*- coding: utf-8 -*-
"""Untitled73.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Pkpr2uQlQM4pDedjpEDhIUplA-yK_1-e
"""

# Import necessary libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Load the dataset (replace the path if the file is already uploaded in Colab)
data = pd.read_csv('/content/dataset_sih.csv')  # Or upload from Colab's file upload feature

# Display the first few rows
print("First five rows of the dataset:")
display(data.head())

# Basic information
print("\nDataset Info:")
data.info()

# Descriptive Statistics
print("\nDescriptive Statistics:")
display(data.describe())

# Checking for missing values
print("\nMissing Values:")
print(data.isnull().sum())

# Univariate Analysis - Distribution of Disease Rate
plt.figure(figsize=(10, 6))
sns.histplot(data['Disease Rate'], kde=True, color='blue')
plt.title("Distribution of Disease Rate")
plt.xlabel("Disease Rate")
plt.ylabel("Frequency")
plt.show()

# Univariate Analysis - Distribution of Percentage
plt.figure(figsize=(10, 6))
sns.histplot(data['Percentage'], kde=True, color='green')
plt.title("Distribution of Percentage")
plt.xlabel("Percentage")
plt.ylabel("Frequency")
plt.show()

# Bivariate Analysis - Percentage by Disease
plt.figure(figsize=(12, 8))
sns.boxplot(x='Disease', y='Percentage', data=data)
plt.title("Percentage by Disease")
plt.xticks(rotation=90)
plt.show()

# Bivariate Analysis - Scatter Plot between Disease Rate and Percentage
plt.figure(figsize=(10, 6))
sns.scatterplot(x='Disease Rate', y='Percentage', hue='Disease', data=data)
plt.title("Disease Rate vs Percentage")
plt.xlabel("Disease Rate")
plt.ylabel("Percentage")
plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')
plt.show()

# Correlation Heatmap
plt.figure(figsize=(8, 6))
sns.heatmap(data[['Disease Rate', 'Percentage']].corr(), annot=True, cmap='coolwarm')
plt.title("Correlation Heatmap")
plt.show()

# Analysis by District (e.g., Mean Disease Rate per District)
district_disease_rate = data.groupby('District')['Disease Rate'].mean().sort_values()
plt.figure(figsize=(12, 8))
sns.barplot(x=district_disease_rate.index, y=district_disease_rate.values)
plt.title("Average Disease Rate by District")
plt.xlabel("District")
plt.ylabel("Average Disease Rate")
plt.xticks(rotation=90)
plt.show()